http {
    include mime.types;

    set_real_ip_from 0.0.0.0/0;
    real_ip_recursive on;
    real_ip_header X-Forwarded-For;

    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    upstream frontendserver {
        server host.docker.internal:3000;
    }

    upstream backendserver {
        server host.docker.internal:4000;
    }

    server {
        listen 80;
        server_name localhost;
        root /proxy;

        location / {
            proxy_pass                  http://frontendserver;
            proxy_http_version          1.1;
            proxy_set_header            Upgrade $http_upgrade;
            proxy_set_header            Connection 'upgrade';
            proxy_set_header            Host $host;
            proxy_cache_bypass          $http_upgrade;
            proxy_pass_request_headers  on;
        }

        location /api/v1 {
            proxy_pass                  http://backendserver;
            proxy_http_version          1.1;
            proxy_set_header            Upgrade $http_upgrade;
            proxy_set_header            Connection 'upgrade';
            proxy_set_header            Host $host;
            proxy_cache_bypass          $http_upgrade;
            proxy_pass_request_headers  on;
        }
    }
}

events {}